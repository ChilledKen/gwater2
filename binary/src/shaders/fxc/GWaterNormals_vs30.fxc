#include "common_vs_fxc.h"

struct VS_INPUT
{
	float4 vPos			: POSITION;		// Position
	float4 vNormal		: NORMAL;		// Normal
	float4 vBoneWeights	: BLENDWEIGHT;	// Skin weights
	float4 vBoneIndices	: BLENDINDICES;	// Skin indices
	float4 vTexCoord	: TEXCOORD0;	// Texture coordinates
	float4 vColor		: COLOR0;		// Color
};

struct VS_OUTPUT
{
	float4 projPosSetup	: POSITION;
	float4 coord		: TEXCOORD0;
	float3 pos			: TEXCOORD1;
	float4x4 proj		: TEXCOORD2;
	float3 eye_pos		: NORMAL0;
	//float3x3 normal		: NORMAL0;
};

VS_OUTPUT main( const VS_INPUT v ) 
{
	VS_OUTPUT o = (VS_OUTPUT)0;

	float3 normal, worldPos;
	SkinPositionAndNormal(0, v.vPos, v.vNormal, v.vBoneWeights, v.vBoneIndices, worldPos, normal);

	float4 vProjPos = mul(float4(worldPos, 1), cViewProj);
	vProjPos.z = dot(float4(worldPos, 1), cViewProjZ);	// wtf does this even do?

	o.projPosSetup = vProjPos;
	o.coord = v.vTexCoord;
	o.pos = worldPos;//float4(worldPos, length(worldPos - cEyePos));
	o.eye_pos = cEyePos;
	o.proj = cViewProj;

	//float3 right = normalize(cross(normal, float3(0, 0, 1)));
	//float3 up = cross(normal, right);
	//o.normal = float3x3(
	//	-right.x, -right.y, -right.z,
	//	normal.x, normal.y, normal.z,
	//	up.x, up.y, up.z
	//);

	return o;
};
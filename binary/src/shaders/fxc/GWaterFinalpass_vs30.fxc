#include "common_vs_fxc.h"

struct VS_INPUT {
	float4 vPos			: POSITION;		// Position
	float4 vNormal		: NORMAL;		// Normal
	float4 vTexCoord	: TEXCOORD0;	// Texture coordinates
};

struct VS_OUTPUT {
	float4 projPosSetup	: POSITION;
	float4 coord		: TEXCOORD0;
	float4 eyepos		: TEXCOORD1;
	float3 pos			: TEXCOORD2;
	float4x4 proj		: TEXCOORD3;
};

VS_OUTPUT main(const VS_INPUT v) {
	VS_OUTPUT o = (VS_OUTPUT)0;

	float3 normal, worldPos;
	SkinPositionAndNormal(0, v.vPos, 0, 0, 0, worldPos, normal);

	float4 vProjPos = mul(float4(worldPos, 1), cViewProj);
	vProjPos.z = dot(float4(worldPos, 1), cViewProjZ);	// wtf does this even do?

	o.projPosSetup = vProjPos;
	o.coord = v.vTexCoord;
	o.eyepos = float4(cEyePos, length(worldPos - cEyePos));
	o.proj = cViewProj;	// in C++ forced to be inverse of cViewProj, NOT ACTUALLY cModelViewProj!
	o.pos = worldPos;

	return o;
};